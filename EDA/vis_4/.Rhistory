ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of Airbnb Check In Times") +
xlab("Time of Day") +
ylab("Density") +
#  scale_fill_discrete(labels = c("Chicago","Los Angeles","New York City","San Francisco")) +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4)) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of Airbnb Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4)) +
theme_fivethirtyeight()
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
four_cities <- read.csv("updated_cleaned_four_cities.csv")
##CLEANING CHECKED IN
View(unique(four_cities$Earliest.Check.In))
#disregarding those observations with an unspecified/flexible check in or check out time
four_cities <- four_cities %>%
filter(!Earliest.Check.In == "Unspecified") %>%
filter(!Earliest.Check.In == "Flexible") %>%
filter(!is.na(Earliest.Check.In)) %>%
filter(!Check.Out == "unspecified")
PM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "PM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
AM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "AM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", "")))
twelve_pm <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12PM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", "")))
twelve_am <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12AM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
dfs <- list(PM_only, AM_only, twelve_pm, twelve_am)
cleaned_time_df <- join_all(dfs, type = "full")
no_twelves_out <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of Airbnb Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4)) +
theme
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of Airbnb Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of Airbnb Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4)) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
#scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guide_legend(NULL) +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check Out Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.7) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_fivethirtyeight()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_base()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_economist()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_excel()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_few()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_foundation()
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_gdocs()
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.6) +
labs(x= "Time of Day",
y = "Density",
title = "Density Plot of Airbnb Check In Times") +
scale_x_continuous(limits=c(0,24),
breaks=seq(0,24,4)) +
guides(color = "none") +
scale_fill_discrete(labels = c("Chicago", "Los Angeles", "New York City", "San Francisco")) +
theme_gdocs()
setwd("Judys-Air:finalproject-airbnb-team judyteng$ cd vis_2")
setwd("/Users/judyteng/Desktop/stat133/finalproject-airbnb-team/vis_2")
price_guest_df <- read_csv("updated_cleaned_four_cities.csv") %>%
select(Accomodates, Price, City, price_p) %>%
mutate(City = factor(City,
levels = c("la","sf","ch","ny"),
labels= c("Los Angeles","San Francisco","Chicago","New York City")))
price_guest_df <- read_csv("updated_cleaned_four_cities.csv")
price_guest_df <- read_csv("updated_cleaned_four_cities.csv") %>%
select(Accomodates, Price, City, price_p) %>%
mutate(City = factor(City,
levels = c("la","sf","ch","ny"),
labels= c("Los Angeles","San Francisco","Chicago","New York City")))
price_guest_df <- read_csv("updated_cleaned_four_cities.csv") %>%
select(Accomodates, Price, City, Price.Per.Indv) %>%
mutate(City = factor(City,
levels = c("la","sf","ch","ny"),
labels= c("Los Angeles","San Francisco","Chicago","New York City")))
View(price_guest_df)
ggplot(price_guest_df,
aes(y = Price,
x = Accomodates,
color = City)) +
geom_point(stat= "identity",
position = position_dodge()) +
geom_smooth(method = "lm", formula = y~log(x), se = FALSE) +
scale_y_log10(breaks = seq(0,1000,100)) +
scale_x_continuous(breaks = seq(0,13,1)) +
labs(y = "Daily Price Per Night (USD)",
x = "Accomodations Per Room (Persons)",
title = "Airbnb: Daily Price Trend Based on Persons Per Room") +
theme_economist()
ggplot(price_guest_df,
aes(y = Price.Per.Indv,
x = Accomodates,
color = City)) +
geom_point(stat= "identity",
position = position_dodge()) +
geom_smooth(method = "lm", formula = y~log(x), se = FALSE) +
scale_y_log10(breaks = seq(0,1000,100)) +
scale_x_continuous(breaks = seq(0,13,1)) +
labs(y = "Price Per Person (USD)",
x = "Accomodations Per Room (Persons)",
title = "Airbnb: Per Person Price Trend Based on Persons Per Room") +
theme_economist()
setwd("/Users/judyteng/Desktop/stat133/finalproject-airbnb-team/vis_3")
discount <- read_csv("updated_cleaned_four_cities.csv")
View(discount)
discount <- discount %>%
select(`Weekly.Discount(%)`,`Monthly.Discount(%)`, Price, City) %>%
mutate(`Weekly.Discount(%)` = str_replace(`Weekly.Discount(%)`,"unspecified", 0),
`Monthly.Discount(%)` = str_replace(`Monthly.Discount(%)`, "unspecified",0))
no_discount <- discount %>%
filter(`Monthly.Discount(%)` == 0) %>%
mutate(Weekly.Price = Price,
Monthly.Price = Price) %>%
select(-`Monthly.Discount(%)`, -`Weekly.Discount(%)`)
have_discount <- discount %>%
filter(`Monthly.Discount(%)` != 0) %>%
mutate(Weekly.Price = (1- 0.01*as.numeric(`Weekly.Discount(%)`))*Price,
Monthly.Price = (1- 0.01*as.numeric(`Monthly.Discount(%)`))*Price) %>%
select(-`Monthly.Discount(%)`, -`Weekly.Discount(%)`)
discount_final <- rbind(no_discount, have_discount) %>%
gather(key = time , value = price, Weekly.Price, Monthly.Price) %>%
mutate(City = factor(City,
levels = c("sf","la","ch","nyc"),
labels = c("San Francisco","Los Angeles","Chicago","New York City")))
colnames(discount_final)[1] <- "Daily.Price"
View(discount_final)
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(~time) +
labs(x = "Original Price",
y = "Discounted Price") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0, slope = 1)
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(~time) +
labs(x = "Original Daily Price",
y = "Discounted Daily Price",
title = "Degree of Discounting Based On Duration") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0, slope = 1) +
theme_wsj()
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm",
se = FALSE,
fullrange = TRUE) +
facet_grid(~time) +
labs(x = "Original Daily Price",
y = "Discounted Daily Price",
title = "Degree of Discounting Based On Duration") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0, slope = 1) +
theme_economist()
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm",
se = FALSE,
fullrange = TRUE) +
facet_grid(~time) +
labs(x = "Original Daily Price",
y = "Discounted Daily Price",
title = "Degree of Discounting Based On Duration") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0, slope = 1) +
theme_gdocs()
discount_final <- rbind(no_discount, have_discount) %>%
gather(key = time , value = price, Weekly.Price, Monthly.Price) %>%
mutate(City = factor(City,
levels = c("sf","la","ch","ny"),
labels = c("San Francisco","Los Angeles","Chicago","New York City")))
colnames(discount_final)[1] <- "Daily.Price"
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm",
se = FALSE,
fullrange = TRUE) +
facet_grid(~time) +
labs(x = "Original Daily Price",
y = "Discounted Daily Price",
title = "Degree of Discounting Based On Duration") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0, slope = 1) +
theme_gdocs()
help(abline)
ggplot(discount_final, aes(x= Daily.Price,
y = price,
color = City)) +
geom_point(alpha = 0.5, stroke = 0.5) +
geom_smooth(method = "lm",
se = FALSE,
fullrange = TRUE) +
facet_grid(~time) +
labs(x = "Original Daily Price",
y = "Discounted Daily Price",
title = "Degree of Discounting Based On Duration") +
scale_y_continuous(breaks = seq(0,1000,200)) +
scale_x_continuous(breaks = seq(0,1000,200)) +
geom_abline(intercept = 0,
slope = 1,
size = 1) +
theme_gdocs()
citydf = read_csv("updated_four_cities.csv") %>%
mutate(city = factor(city, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.type, city) %>%
mutate(dailyavg = mean(price))
setwd("/Users/judyteng/Desktop/stat133/finalproject-airbnb-team/vis_4")
citydf = read_csv("updated_four_cities.csv") %>%
mutate(city = factor(city, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.type, city) %>%
mutate(dailyavg = mean(price))
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(city, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.type, city) %>%
mutate(dailyavg = mean(price))
citydf = read_csv("updated_cleaned_four_cities.csv")
View(citydf)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(city, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.type, City) %>%
mutate(dailyavg = mean(price))
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.type, City) %>%
mutate(dailyavg = mean(Price))
View(citydf)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.Type, City) %>%
mutate(dailyavg = mean(Price))
ggplot(citydf)+
geom_bar(aes(x = Room.type,
y = dailyavg,
fill = Room.type),
color = "black",
stat="identity",
position = position_dodge(),
width = 0.2) +
coord_flip() +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
facet_grid(~city) +
labs(title = "Average daily rate of Airbnb rentals by type of room",
x = "Type of Room",
y = "Price") +
scale_fill_discrete(name = "Type of Room")
library(scales)
ggplot(citydf)+
geom_bar(aes(x = Room.type,
y = dailyavg,
fill = Room.type),
color = "black",
stat="identity",
position = position_dodge(),
width = 0.2) +
coord_flip() +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
facet_grid(~city) +
labs(title = "Average Daily Rate of Airbnb by Room Type",
x = "Type of Room",
y = "Price") +
scale_fill_discrete(name = "Type of Room")
ggplot(citydf)+
geom_bar(aes(x = Room.Type,
y = dailyavg,
fill = Room.Type),
color = "black",
stat="identity",
position = position_dodge(),
width = 0.2) +
coord_flip() +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
facet_grid(~city) +
labs(title = "Average Daily Rate of Airbnb by Room Type",
x = "Type of Room",
y = "Price") +
scale_fill_discrete(name = "Type of Room")
View(citydf)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
group_by(Room.Type, City) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt")) %>%
mutate(dailyavg = mean(Price))
ggplot(citydf)+
geom_bar(aes(x = Room.Type,
y = dailyavg,
fill = Room.Type),
color = "black",
stat="identity",
position = position_dodge(),
width = 0.2) +
coord_flip() +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
facet_grid(~city) +
labs(title = "Average Daily Rate of Airbnb by Room Type",
x = "Type of Room",
y = "Price") +
scale_fill_discrete(name = "Type of Room")
unique(citydf$dailyavg)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt")) %>%
group_by(Room.Type, City) %>%
mutate(dailyavg = mean(Price))
View(citydf)
unique(citydf$dailyavg)
citydf = read_csv("updated_cleaned_four_cities.csv")
View(citydf)
unique(citydf$dailyavg)
unique(citydf$Price)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt"))
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt")) %>%
group_by(City, Room.Type) %>%
mutate(dailyavg = mean(Price))
unique(citydf$dailyavg)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt")) %>%
group_by(City, Property.Type) %>%
mutate(dailyavg = mean(Price))
unique(citydf$dailyavg)
citydf = read_csv("updated_cleaned_four_cities.csv") %>%
mutate(city = factor(City, levels = c("la", "ch", "sf", "ny"),
labels = c("Los Angeles", "Chicago", "San Francisco", "New York"))) %>%
filter(Room.Type %in% c("Shared room","Private room","Entire home/apt"))
