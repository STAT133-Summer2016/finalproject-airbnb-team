cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM") |
!str_detect(Check.Out, "12AM" | "12PM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM" | "12PM") %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM" | !Check.Out == "12PM") %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM" | !Check.Out == "12PM")
View(cleaned_time_df)
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM")%>%
filter(!Check.Out == "12PM")
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM")%>%
filter(!Check.Out == "12PM") %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df %>%
fulter(Check.Out == "12AM")
cleaned_time_df %>%
filter(Check.Out == "12AM")
cleaned_time_df %>%
filter(Check.Out == "12PM")
cleaned_time_df %>%
filter(!Check.Out == "12PM")
cleaned_time_df %>%
filter(!Check.Out == "12PM") %>%
filter(!Check.Out == "12AM")
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12AM")%>%
filter(!Check.Out == "12PM")
filter(!Check.Out == "12AM")%>%
filter(!Check.Out == "12PM") %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df %>%
filter(!Check.Out == "12PM")
cleaned_time_df %>%
filter(!Check.Out == "12PM") %>%
filter(!Check.Out == "12AM")
View(cleaned_time_df)
!str_detect(cleaned_time_df$Check.Out, "12")
cleaned_time_df[!str_detect(cleaned_time_df$Check.Out, "12"), ]
View(cleaned_time_df[!str_detect(cleaned_time_df$Check.Out, "12"), ])
cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12AM") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
Check.Out))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12AM") & str_detect(Check.Out, "AM"),
as.numeric(str_r
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12AM") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
Check.Out))
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12AM") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
Check.Out))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- join_all(dfs, type = "full")
str_detect(cleaned_time_df, "12[AP][M]")
str_detect(cleaned_time_df$Check.Out, "12[AP][M]")
View(cleaned_time_df[cleaned_time_df$Check.Out, "12[AP][M]", ])
cleaned_time_df[cleaned_time_df$Check.Out, "12[AP][M]", ]
cleaned_time_df[str_detect(cleaned_time_df$Check.Out, "12[AP][M]"), ]
View(cleaned_time_df[str_detect(cleaned_time_df$Check.Out, "12[AP][M]"), ])
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12[AP][M]") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12[AP][M]") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ".1"))))
unique(cleaned_time_df$Check.Out)
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(!str_detect(Check.Out, "12[AP][M]") & str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ".1"))))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12"))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12"))
cleaned_time_df <- join_all(dfs, type = "full")
twelves_out <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12"))
cleaned_time_df <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12"))
four_cities <- read.csv("cleaned_four_cities.csv")
four_cities <- four_cities %>%
filter(!Earliest.Check.In == "Unspecified") %>%
filter(!Earliest.Check.In == "Flexible") %>%
filter(!is.na(Earliest.Check.In)) %>%
filter(!Check.Out == "unspecified")
#to put time into a 0-24hr interval for graphing
PM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "PM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
#filters only am check in values, remvoes am, converts into numeric value
AM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "AM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", "")))
#for one case of midnight and noontimes
twelve_pm <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12PM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", "")))
twelve_am <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12AM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
dfs <- list(PM_only, AM_only, twelve_pm, twelve_am)
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12"))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
cleaned_time_df <- join_all(dfs, type = "full")
cleaned_time_df <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12"))
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))))
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- join_all(dfs, type = "full")
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df %>%
filter(!Check.Out == "12PM") %>%
filter(!Check.Out == "12AM")
cleaned_time_df <- cleaned_time_df %>%
filter(!Check.Out == "12PM") %>%
filter(!Check.Out == "12AM")
View(unique(cleaned_time_df$Check.Out))
cleaned_time_df <- cleaned_time_df %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
View(unique(cleaned_time_df$Check.Out))
is.na(cleaned_time_df$Check.Out)
unique(is.na(cleaned_time$Check.Out))
unique(is.na(cleaned_time_df$Check.Out))
cleaned_time_df <- join_all(dfs, type = "full")
no_twelves_out <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
ggplot(cleaned_time_df) +
geom_density (aes(Check.In), color=NA, adjust=1.3, kernel = "gaussian", alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4)) +
scale_y_continuous(limits=c(0,.125), breaks=seq(0,.12,.04))
ggplot(cleaned_time_df) +
geom_density (aes(Check.In), color=NA, adjust=1.3, kernel = "gaussian", alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df) +
geom_density (aes(Earliest.Check.In), color=NA, adjust=1.3, kernel = "gaussian", alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (color=NA, adjust=1.3, kernel = "gaussian", alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density()
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density() +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (adjust=1.3, kernel = "gaussian", alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (adjust=1.3, alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (fill = city, adjust=1.3, alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = city, adjust=1.3, alpha = 0.3)) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = City, adjust=1.3, alpha = 0.3)) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = City, adjust=1.3)) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = City, adjust=1.3), alpha = 0.3) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = City, adjust=1.3), alpha = 0.6) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density (aes(fill = City, adjust=1.3)) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City)) +
geom_density(alpha = 0.5) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
geom_density(alpha = 0.1) +
xlim(55, 70)
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.5) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
m <- ggplot(faithfuld, aes(waiting, eruptions))
m
m + geom_raster()
b <- ggplot(economics, aes(x = date, y = unemploy))
b
j <- b + geom_line()
j
j + scale_fill_manual(values = alpha(c("blue", "red"), .3))
j + scale_fill_manual(values = alpha(c("blue", "red"), .3))
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Earliest.Check.In)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density")
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_discrete(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check Out Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
four_cities <- read.csv("updated_cleaned_four_cities.csv")
setwd("~/stat133/finalproject-airbnb-team/vis_5")
four_cities <- read.csv("updated_cleaned_four_cities.csv")
##CLEANING CHECKED IN
View(unique(four_cities$Earliest.Check.In))
#disregarding those observations with an unspecified/flexible check in or check out time
four_cities <- four_cities %>%
filter(!Earliest.Check.In == "Unspecified") %>%
filter(!Earliest.Check.In == "Flexible") %>%
filter(!is.na(Earliest.Check.In)) %>%
filter(!Check.Out == "unspecified")
#filters only pm check in values, removes pm, converts into numeric value and adds 12
#to put time into a 0-24hr interval for graphing
PM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "PM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
#filters only am check in values, remvoes am, converts into numeric value
AM_only <- four_cities %>%
filter(str_detect(Earliest.Check.In, "AM")) %>%
filter(!str_detect(Earliest.Check.In, "12")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", "")))
#for one case of midnight and noontimes
twelve_pm <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12PM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "PM", "")))
twelve_am <- four_cities %>%
filter(str_detect(Earliest.Check.In, "12AM")) %>%
mutate(Earliest.Check.In = as.numeric(str_replace_all(Earliest.Check.In, "AM", ""))) %>%
mutate(Earliest.Check.In = Earliest.Check.In + 12)
dfs <- list(PM_only, AM_only, twelve_pm, twelve_am)
cleaned_time_df <- join_all(dfs, type = "full")
##CLEANING CHECKED OUT
no_twelves_out <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check Out Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
View(four_cities)
four_cities <- read.csv("cleaned_four_cities.csv")
setwd("~/Desktop")
setwd("~/stat133/finalproject-airbnb-team/vis_5")
four_cities <- read.csv("updated_cleaned_four_cities.csv")
str_replace_all(four_cities$Check.In, "[ ]-.*", "")
four_cities <- four_cities %>%
filter(!Check.In == "Unspecified") %>%
filter(!Check.In == "Flexible") %>%
filter(!is.na(Check.In)) %>%
filter(!Check.Out == "unspecified")
four_cities$Check.In <- str_replace_all(four_cities$Check.In, "[ ]-.*", "")
four_cities <- four_cities %>%
filter(!Check.In == "Unspecified") %>%
filter(!Check.In == "Flexible") %>%
filter(!is.na(Check.In)) %>%
filter(!Check.Out == "unspecified")
four_cities$Check.In <- str_replace_all(four_cities$Check.In, "[ ]-.*", "")
#filters only pm check in values, removes pm, converts into numeric value and adds 12
#to put time into a 0-24hr interval for graphing
PM_only <- four_cities %>%
filter(str_detect(Check.In, "PM")) %>%
filter(!str_detect(Check.In, "12")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "PM", ""))) %>%
mutate(Check.In = Check.In + 12)
#filters only am check in values, remvoes am, converts into numeric value
AM_only <- four_cities %>%
filter(str_detect(Check.In, "AM")) %>%
filter(!str_detect(Check.In, "12")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "AM", "")))
#for one case of midnight and noontimes
twelve_pm <- four_cities %>%
filter(str_detect(Check.In, "12PM")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "PM", "")))
twelve_am <- four_cities %>%
filter(str_detect(Check.In, "12AM")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "AM", ""))) %>%
mutate(Check.In = Check.In + 12)
dfs <- list(PM_only, AM_only, twelve_pm, twelve_am)
cleaned_time_df <- join_all(dfs, type = "full")
no_twelves_out <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
ggplot(cleaned_time_df, aes(Earliest.Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
library(readr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
four_cities <- read.csv("updated_cleaned_four_cities.csv")
##CLEANING CHECKED IN
View(unique(four_cities$Check.In))
#disregarding those observations with an unspecified/flexible check in or check out time
four_cities <- four_cities %>%
filter(!Check.In == "Unspecified") %>%
filter(!Check.In == "Flexible") %>%
filter(!is.na(Check.In)) %>%
filter(!Check.Out == "unspecified")
four_cities$Check.In <- str_replace_all(four_cities$Check.In, "[ ]-.*", "")
#filters only pm check in values, removes pm, converts into numeric value and adds 12
#to put time into a 0-24hr interval for graphing
PM_only <- four_cities %>%
filter(str_detect(Check.In, "PM")) %>%
filter(!str_detect(Check.In, "12")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "PM", ""))) %>%
mutate(Check.In = Check.In + 12)
#filters only am check in values, remvoes am, converts into numeric value
AM_only <- four_cities %>%
filter(str_detect(Check.In, "AM")) %>%
filter(!str_detect(Check.In, "12")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "AM", "")))
#for one case of midnight and noontimes
twelve_pm <- four_cities %>%
filter(str_detect(Check.In, "12PM")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "PM", "")))
twelve_am <- four_cities %>%
filter(str_detect(Check.In, "12AM")) %>%
mutate(Check.In = as.numeric(str_replace_all(Check.In, "AM", ""))) %>%
mutate(Check.In = Check.In + 12)
dfs <- list(PM_only, AM_only, twelve_pm, twelve_am)
cleaned_time_df <- join_all(dfs, type = "full")
##CLEANING CHECKED OUT
no_twelves_out <- cleaned_time_df %>%
filter(!str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")), #as.numeric coerces NAs
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- cleaned_time_df %>%
filter(str_detect(Check.Out, "12")) %>%
mutate(Check.Out = ifelse(str_detect(Check.Out, "AM"),
as.numeric(str_replace_all(Check.Out, "AM", "")),
as.numeric(str_replace_all(Check.Out, "PM", ""))+12))
cleaned_time_df <- full_join(no_twelves_out, cleaned_time_df)
ggplot(cleaned_time_df, aes(Check.In, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check In Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
ggplot(cleaned_time_df, aes(Check.Out, fill = City, colour = City)) +
geom_density(alpha = 0.4) +
ggtitle("Density Plot of AirBNB Check Out Times") +
xlab("Time of Day") +
ylab("Density") +
scale_x_continuous(limits=c(0,24), breaks=seq(0,24,4))
